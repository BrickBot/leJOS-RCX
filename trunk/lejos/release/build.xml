<!--
  ==================================================
  Buildfile for release of leJOS
  $Id$
  ==================================================
-->
<project name="leJOS release" default="release" basedir=".">
	
	<!-- to do
		+ update tutorial
		+ add UML diagrams
		+ add samples tests
		+ update API page(s) and tutorial on lejos.org
	-->

	<!-- Setting up the global properties for the build -->
  	<property file="build.properties"/>
	<property environment="env"/>
	<property name="lejos.root" value="${basedir}/.."/>
	<property name="lejosunit.home" value="${env.LEJOSUNIT_HOME}"/>
	<property name="3rdparty.libs" value="${lejos.root}/3rdparty/lib" />
	<property name="release" value="${lejos.root}/release"/>
	<property name="release.bin" value="${release}/bin"/>
	<property name="src" value="${lejos.root}/src"/>
	<property name="javasrc" value="${src}/java"/>
	<property name="javavm.src" value="${src}/javavm"/>
	<property name="lejos.tutorial" value="${lejos.root}/docs/tutorial"/>
	<property name="release.tmp" value="${release}/tmp"/>
	<property name="release.lib" value="${release}/lib"/>
	<property name="release.src" value="${release}/src"/>
	<property name="release.dist" value="${release}/dist"/>
	<property name="release.release" value="${release}/release"/>
	<property name="release.docs" value="${release}/docs"/>
	<property name="release.samples" value="${release}/samples"/>
	<property name="emu.src" value="${src}/tools/emu-lejos"/>
	<property name="irctrcx.lib.src" value="${src}/comms/libirtrcx"/>
	<property name="jirctrcx.lib.src" value="${src}/comms/libjirtrcx"/>
	<property name="release.3rdparty.libs" value="${release}/3rdparty/lib"/>
	<property name="plat.unix.src" value="${src}/platform/unix"/>
	<property name="plat.rcx.src" value="${src}/platform/rcx"/>
	<property name="fastdl.src" value="${src}/comms/tools/fastdl"/>
	<property name="test.root" value="${lejos.root}/test"/>
	<property name="release.3rdparty.cp" value="${release.3rdparty.libs}/commons-cli-1.0.jar:${release.3rdparty.libs}/bcel-5.1.jar"/>
	<property name="release.lib.cp" value="${release.lib}/classes.jar:${release.lib}/jtools.jar"/>
	<property name="test.compilation.class" value="SimpleTest"/>
	<property name="make.out" value="${release.bin}"/>
	<property name="lejosunit.cp" value="${release.lib.cp}:${release.3rdparty.cp}:${lejosunit.home}/build/lib/lejosunit-1.0.2.jar"/>
	<property name="lejosunit.lejos" value="${release}"/>
	<property name="build.tmp" value="${release.tmp}"/>
	<property name="lib" value="${release.lib}"/>
	<property name="bin" value="${release.bin}"/>
	<property name="lejosunit.testsources.dir" value="${lejos.root}/test/lejosunit/src"/>
	<property name="lejosunit.testclasses.dir" value="${lejos.root}/test/lejosunit/bin"/>
	<property name="lejosunit.testsuite.class" value="josx.test.lejosunit.AllTests"/>
	<property name="lejos.samples.testsources.dir" value="${release.samples}"/>
	<property name="lejos.samples.testclasses.dir" value="${lejos.root}/test/samples/bin"/>

	<!-- dispatch some tasks to cvs build file --> 
	<import file="${lejos.root}/build.xml"/>

	<!-- cpptasks task & type def -->
	<taskdef resource="cpptasks.tasks">
	  <classpath>
	    <pathelement location="${3rdparty.libs}/cpptasks.jar"/>
	  </classpath>
	</taskdef>
	<typedef resource="cpptasks.types">
	  <classpath>
	    <pathelement location="${3rdparty.libs}/cpptasks.jar"/>
	  </classpath>
	</typedef>
	
	<!-- release leJOS --> 
	<target name="release" depends ="clean,create.folders,emulator,irctrcx.libs,jirctrcx.libs,lejos.libs,lejos.sources,emu.runtime,lejos.firmware,license,docu,scripts,samples,test" 
		description="releases leJOS">
		<!-- clean distribution -->
		<delete>
		    <fileset dir="${release.dist}">
		    	<include name = "**/*.gz"/>
		    	<include name = "**/*.zip"/>
		    </fileset>
		</delete>
		<!-- tar/zip os dependent file -->
		<antcall target="distribution.${lejos.ostype}"/> 
		<!-- zip leJOS doc distribution -->
		<zip destfile="${release.dist}/${lejos.version}-doc.zip">
			 <fileset dir="${release}" >
			    <include name="docs/**"/>
			  </fileset>
		</zip>
		<!-- clean temp files -->
		<delete>
		    <fileset dir="${release.dist}">
		    	<include name = "**/*.tar"/>
		    </fileset>
		</delete>
		<!-- notify -->
		<echo message="The packed distribution might be found in ${release.dist} now"/>
	</target>

  	<!-- cleans the distribution -->
	<target name="clean" description="clean up all generated files">
	    <!-- delete generated files -->
	  	<delete file="${javasrc}/tools/js/tinyvm/SpecialClassConstants.java"/>
	  	<delete file="${javasrc}/tools/js/tinyvm/SpecialSignatureConstants.java"/>
	  	<!-- delete transient release folders -->
	    <delete dir="${release.tmp}"/>
	  	<delete dir="${release.lib}"/>
	  	<delete dir="${release.src}"/>
	  	<delete dir="${release.docs}"/>
	  	<delete dir="${release.samples}"/>
	  	<delete dir="${release.3rdparty.libs}"/>
		<!-- delete generated artifacts -->
	  	<delete>
	  		<fileset dir="${release.bin}">
				<exclude name="*.srec"/>
			</fileset>
	  	</delete>
		<!-- delete compiled and generated artifacts -->
		<delete>
			<fileset dir="${lejos.root}"> 
				<include name="**/*.o"/>
				<include name="**/*~"/>
				<include name="**/*.core"/>
				<include name="**/*.tvm"/>
				<include name="**/*.class"/>
				<include name="**/*.bin"/>
				<include name="**/*.sig"/>
				<include name="**/*.bak"/>
				<include name="**/*.stackdump"/>
				<include name="**/*.backtrace"/>
				<include name="**/*.#"/>
				<include name="**/*.lst"/>
				<include name="**/*.log"/>
			</fileset>
		</delete>
	  	<!-- delete distribution folder -->
	  	<delete dir="${release.dist}"/>
	  	<!-- delete release/release folder -->
	  	<delete dir="${release.release}"/>
  	</target>
  	
	<!-- copies the lejos sources -->
	<target name="lejos.sources" description="copies the lejos sources">
		<copy todir="${release.src}/java">
			<fileset dir="${javasrc}">
        		<include name="classes/**/*.java"/>
        		<include name="rcxcomm/**/*.java"/>
    			<include name="pcrcxcomm/**/*.java"/>
        		<include name="vision/**/*.java"/>
      		</fileset>
		</copy>
		<copy todir="${release.src}/tools/emu-lejos">
          	<fileset dir="${emu.src}">
            	<include name="**/*.c"/>
            	<include name="**/*.h"/>
            	<include name="**/build.xml"/>
          	</fileset>
		</copy>
		<copy todir="${release.src}/comms/libirtrcx">
          	<fileset dir="${irctrcx.lib.src}">
            	<include name="**/*.c"/>
            	<include name="**/*.h"/>
            	<include name="**/*.c"/>
            	<include name="**/build.xml"/>
            	<include name="**/Makefile"/>
          	</fileset>
		</copy>
		<copy todir="${release.src}/comms/libjirtrcx">
          	<fileset dir="${jirctrcx.lib.src}">
            	<include name="**/*.c"/>
            	<include name="**/*.h"/>
            	<include name="**/*.def"/>
            	<include name="**/build.xml"/>
            	<include name="**/Makefile"/>
          	</fileset>
		</copy>
		<copy todir="${release.src}/javavm">
          	<fileset dir="${javavm.src}">
            	<include name="**/*.c"/>
            	<include name="**/*.h"/>
            	<include name="**/*.db"/>
            	<include name="**/*.hc"/>
          	</fileset>
		</copy>
		<copy todir="${release.src}/platform/unix">
          	<fileset dir="${plat.unix.src}">
            	<include name="**/*.c"/>
            	<include name="**/*.h"/>
            	<include name="**/build.xml"/>
          	</fileset>
		</copy>
	</target>

	<!-- makes a timestamp and creates some required folders -->
 	<target name="create.folders" description="setup build">
    	<tstamp/>
    	<mkdir dir="${release.tmp}"/>
    	<mkdir dir="${release.lib}"/>
    	<mkdir dir="${release.src}"/>
    	<mkdir dir="${release.docs}"/>
    	<mkdir dir="${release.docs}/tutorial"/>
    	<mkdir dir="${release.dist}"/>
    	<mkdir dir="${release.release}"/>
    	<mkdir dir="${release.samples}"/>
    	<mkdir dir="${release.3rdparty.libs}"/>
 		<copy todir="${release.3rdparty.libs}">
 			<fileset dir="${3rdparty.libs}">
 				<include name="*.jar"/>
 			</fileset>
 		</copy>
  	</target>

	<!-- creates the documentation -->
	<target name="docu" depends="create.folders,platform.doc,pcrcxcomm.doc,vision.doc" description="creates the documentation">
 		<copy todir="${release.docs}/tutorial">
 			<fileset dir="${lejos.tutorial}">
 				<include name="**/*"/>
 			</fileset>
 		</copy>
 		<copy file="README.html" todir="${release.docs}"/>
 		<copy file="RELEASENOTES" todir="${release.docs}"/>
 		<copy file="LICENSE" todir="${release.docs}"/>
	</target>

	<!-- copies the run scripts -->
	<target name="scripts" depends="create.folders" description="copies the run scripts (lejosjc etc.)">
		<copy todir="${release.bin}">
      		<fileset dir="${lejos.root}/bin">
        		<include name="firmdl"/>
        		<include name="firmdl.bat"/>
        		<include name="lejos"/>
        		<include name="lejos.bat"/>
        		<include name="lejosdl"/>
        		<include name="lejosdl.bat"/>
        		<include name="lejosjc"/>
				<include name="lejosjc.bat"/>
        		<include name="lejoslink"/>
				<include name="lejoslink.bat"/>
				<include name="emulate_lejoslink"/>
				<include name="emulate_lejoslink.bat"/>
      		</fileset>
    	</copy>
		<copy todir="${release.release}">
      		<fileset dir="${release}">
        		<include name="*.sh"/>
      		</fileset>
    	</copy>
		<!-- adjust permissions -->
  		<chmod perm="755">
  			<fileset dir="${release.bin}">
  	      	</fileset>
  		</chmod>
	</target>

	<!-- copies the license -->
	<target name="license" depends="create.folders" description="copies the license">
		<copy todir="${release}">
      		<fileset dir="${lejos.root}">
        		<include name="LICENSE"/>
      		</fileset>
    	</copy>
	</target>

	<!-- copies the samples -->
	<target name="samples" depends="create.folders" description="copies the samples">
		<copy todir="${release.samples}">
      		<fileset dir="${lejos.root}/examples">
        		<exclude name="CVS"/>
        		<exclude name="**/Makefile"/>
      		</fileset>
    	</copy>
	</target>

	<!-- packages the linux distribution -->
	<target name="distribution.linux" description="packages the linux distribution">
		<!-- tar & gzip leJOS Unix distribution -->
		<tar destfile="${release.dist}/${lejos.version}.tar">
			 <tarfileset dir="${release}" >
			    <include name="RELEASENOTES"/>
			    <include name="README.html"/>
			    <include name="lib/*.jar"/>
			    <include name="src/**"/>
			    <include name="bin/*"/>
			 	<exclude name="bin/*.xml"/>
			    <include name="samples/**"/>
			    <include name="check/**"/>
			 	<include name="build/*"/>
			 	<include name="3rdparty/**"/>
			 	<include name="release/*"/>
			  </tarfileset>
		</tar>
		<gzip zipfile="${release.dist}/${lejos.version}.tar.gz" src="${release.dist}/${lejos.version}.tar"/>
	</target>
	
	<!-- packages the windows distribution -->
	<target name="distribution.cygwin" description="packages the windows distribution">
		<!-- zip leJOS windows distribution -->
		<zip destfile="${release.dist}/${lejos.version}-win32.zip">
			 <fileset dir="${release}" >
			    <include name="RELEASENOTES"/>
			    <include name="README.html"/>
			    <include name="lib/*.jar"/>
			    <include name="src/**"/>
			    <include name="bin/*"/>
			 	<exclude name="bin/*.xml"/>
			    <include name="samples/**"/>
			    <include name="check/**"/>
<!--			 	<include name="build/*"/>-->
			 	<include name="3rdparty/**"/>
			  </fileset>
		</zip>
	</target>

	<!-- creates the platform API doc -->
  <target name="platform.doc" depends="" description="generate the platform API doc">
    <mkdir dir="${release.docs}/platform"/>
    <!-- packages: java.io java.lang java.util josx.platform.rcx josx.util josx.robotics josx.rcxcomm java.net javax.servlet.http -->
    <javadoc protected="true"
             windowtitle="leJOS API platform documentation"
             author="true"
             destdir="${release.docs}/platform"
             source="1.1"
             defaultexcludes="yes">
      <fileset dir="${javasrc}/classes"/>
      <fileset dir="${javasrc}/rcxcomm"/>
    </javadoc>
  </target>

  <!-- creates the pcrcxcomm API doc -->
  <target name="pcrcxcomm.doc" depends="create.folders" description="creates the pcrcxcomm API doc">
    <mkdir dir="${release.docs}/pcrcxcomm"/>
    <!-- packages: josx.pcrcxcomm -->
    <javadoc protected="true"
             windowtitle="leJOS PC API documentation"
             author="true"
             destdir="${release.docs}/pcrcxcomm"
             source="1.4"
             defaultexcludes="yes">
      <fileset dir="${javasrc}/pcrcxcomm"/>
    </javadoc>
  </target>

  <!-- creates the vision API doc -->
  <target name="vision.doc" depends="pcrcxcomm.jar" description="creates the vision API doc">
    <mkdir dir="${release.docs}/vision"/>
    <!-- packages: josx.vision -->
    <javadoc protected="true"
             windowtitle="leJOS Vision API documentation"
             author="true"
             destdir="${release.docs}/vision"
             source="1.4"
             defaultexcludes="yes">
      <classpath path="${release.lib}/pcrcxcomm.jar;${release.3rdparty.libs}/jmf.jar"/>
      <fileset dir="${javasrc}/vision"/>
    </javadoc>
  </target>
	
	<!-- test leJOS --> 
	<target name="test" description="tests leJOS">
		<!-- run sample tests -->
		<echo></echo>
		<echo>Running sample tests</echo>
		<ant dir="${test.root}/samples" target="clean" inheritall="true" />
		<ant dir="${test.root}/samples" target="compileSamples" inheritall="true" />
		<!-- run regression tests -->
		<echo></echo>
		<echo>Running regression tests</echo>
		<exec os="Linux" executable="${test.root}/regression/run.sh" failonerror="true" dir="${test.root}/regression">
  			<env key="PATH" path="${test.root}/regression:${release.bin}:${env.PATH}"/>
  			<env key="CLASSPATH" path="${test.root}/regression:${release.lib.cp}:${release.3rdparty.cp}"/>
  		</exec>
		<!-- run lejos unit tests -->
		<echo></echo>
		<echo>Running lejosunit tests</echo>
		<ant dir="${test.root}/lejosunit" target="clean" inheritall="true" />
		<ant dir="${test.root}/lejosunit" target="runInEmulator" inheritall="true" />
	</target>

	<!-- additional targets not called by release target -->
	
	<!-- test leJOS firmware download--> 
	<target name="test.lejos.firmware.download" description="tests leJOS firmware download">
		<exec os="Linux" executable="${release.bin}/firmdl" failonerror="true" dir="${release.bin}">
  			<env key="LEJOS_HOME" path="${release}"/>
  		</exec>
		<exec os="Windows XP" executable="${release.bin}\firmdl.bat" failonerror="true" dir="${release.bin}">
  			<env key="LEJOS_HOME" path="${release}"/>
  		</exec>
	</target>

	<!-- test leJOS compilation --> 
	<target name="test.lejos.compilation" description="tests leJOS compilation">
		<exec os="Linux" executable="${release.bin}/lejosjc" failonerror="true" dir="${test.root}/download">
  			<env key="LEJOS_HOME" path="${release}"/>
  			<arg value="${test.compilation.class}.java"/>
  		</exec>
		<exec os="Windows XP" executable="${release.bin}\lejosjc.bat" failonerror="true" dir="${test.root}\download">
  			<env key="LEJOS_HOME" path="${release}"/>
  			<arg value="${test.compilation.class}.java"/>
  		</exec>
	</target>

	<!-- test leJOS linking --> 
	<target name="test.lejos.linking" depends="test.lejos.compilation" description="tests leJOS linking">
		<exec os="Linux" executable="${release.bin}/lejoslink" failonerror="true" dir="${test.root}/download">
  			<env key="LEJOS_HOME" path="${release}"/>
			<arg value="${test.compilation.class}"/>
			<arg value="-o"/>
			<arg value="${test.compilation.class}.bin"/> 
  		</exec>
		<exec os="Windows XP" executable="${release.bin}\lejoslink.bat" failonerror="true" dir="${test.root}\download">
  			<env key="LEJOS_HOME" path="${release}"/>
			<arg value="${test.compilation.class}"/>
			<arg value="-o"/>
			<arg value="${test.compilation.class}.bin"/> 
  		</exec>
	</target>

	<!-- test leJOS download--> 
	<target name="test.lejos.download" depends="test.lejos.linking" description="tests leJOS download">
		<exec os="Linux" executable="${release.bin}/lejosdl" failonerror="true" dir="${test.root}/download">
  			<env key="LEJOS_HOME" path="${release}"/>
			<arg value="${test.compilation.class}.bin"/>
  		</exec>
	</target>

	<!-- deploys the distribution to org.lejos -->
  	<target name="deploy.to.org.lejos" description="deploys the distribution to org.lejos">
		<!-- all leJOS libs -->
		<mkdir dir="${org.lejos.lib}"/>
			<delete>
  				<fileset dir="${org.lejos.lib}">
				<include name="*.jar"/>
  			</fileset>
		</delete>
		<copy todir="${org.lejos.lib}">
  			<fileset dir="${release.lib}">
				<include name="*.jar"/>
  			</fileset>
		</copy>
		<!-- sources for all leJOS and external libs -->
		<mkdir dir="${org.lejos.src}"/>
			<delete>
  				<fileset dir="${org.lejos.src}">
					<include name="*.zip"/>
  			</fileset>
		</delete>
		<copy todir="${org.lejos.src}">
  			<fileset dir="${release.src}">
				<include name="*.zip"/>
  			</fileset>
		</copy>
		<!-- OS specific drivers (win32) -->
		<mkdir dir="${org.lejos.driver.win32.dir}"/>
   		<copy todir="${org.lejos.driver.win32.dir}" overwrite="true">
  			<fileset dir="${release.bin}">
				<include name="*.dll"/>
  			</fileset>
		</copy>
		<!-- OS specific drivers (linux) -->
		<mkdir dir="${org.lejos.driver.linux.dir}"/>
		<copy todir="${org.lejos.driver.linux.dir}" overwrite="true">
  			<fileset dir="${release.bin}">
				<include name="*.so"/>
  			</fileset>
		</copy>
  	</target>   
	
</project>
