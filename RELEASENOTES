leJOS 1.0.2:
------------

  Paul Andrews has added:
  - Added Runtime class so that heap size and free memory can be
    returned.
  - Added Object.wait()/notify()
  - Added thread priorities. Scheduler will always run threads
    of a greater priority in preference to those of a lower priority.
  - Added daemon threads.
  - Added ability to interrupt sleeping/waiting threads.
  - Added System.exit().
  - Added a 'Poll' class to monitor changes of sensors and buttons in
    the VM (i.e. a call that blocks until a state change occurs).
  - Changed Sensor and Button listeners to use Poll.
  - Changed Sensor and Button listener threads to be daemon threads.
  - Modified 'View' example to update display whenever a sensor state
    changes rather than only when a button is pressed.
  - Modified native method name mangler so that native methods can
    be overloaded.
  - Added default constructor to StringBuffer so that expressions of the
    form "string1" + "string2" will compile.
  - Added several new exceptions to support all of the above.
  - Added the 'final' keyword to API classes where Java 2 normally has it.
  - Added Test class for performing assertions.
  - Fixed bug in memory allocator that failed to detect a full heap.
  - Added subsumption architcture examples using old and new threading.
  - Added '-n' option to lejosfirmdl so that the JVM size can be checked.
  - Fixed up code to remove warnings when compiling with GCC 3.0.
  - Added instructions on building with CygWin1.3.2 and GCC 3.0.
  - Modified code in several places to reduce footprint.
  - Modified compile options to reduce footprint.
  - Reduced footprint to 16k
  
  Juergen Stuber has added:
  - Fixed rotation sensor mode.
  - Modified main loop to check only one flag for increased speed.
  - Cleaned up hooks.
  - Added performance test to examples.
  - Internal changes to button and sensor listener code to make it smaller.

  Brian Bagnall has added:
  - Behavioural API
  - Navigation API
  
leJOS 1.0.1 (not released separately):
--------------------------------------

  - Fixed bug in java.util.Vector: NoSuchMethodError after 7
    elements added.
  --------------------------------------------------------------
  - Phil Berry has contributed some documentation (see
    docs/phil_berry) and more meaningful trace output
    for emu-lejosrun -v.
  - Hajime Murao reporded a bug in jtoolexec.c. The first
    argument was not initialized properly, which
    means that in some systems (e.g. W2K) you'd see a message 
    saying that lejosc was unable to execute javac or something 
    to that effect, with no apparent reason.

leJOS 1.0.0beta3:
-----------------
 
  - Removed gcc's -O2 option from unix_impl/Makefile, as
    it was crashing gcc 2.95.2.
  - Added Christophe Ponsard's remote control example,
    Ryan Vander Bijl's hworld example, and Reinhard Schiedermeier's
    example on RCX-to-RCX communication (serial2rcx).
  - Added a few methods to the Motor class, based on
    suggestions sent by Rune Berge.
  - Copied the entire util/firmdl directory from legOS 0.2.4
    into tools/firmdl, and made minor modifications to it.
    This should fix the infamous "Permission Denied" bug.
  - The emulation tool was crashing when string constants
    were used, due to a byte ordering problem which is now
    fixed.
  - Considerable performance improvements for certain
    Math functions.
  
leJOS 1.0.0beta2:
-----------------
 
  - Fixed a multi-dimensional array allocation bug.
  - Brian Bagnall's performance improvements for java.lang.Math.
  - Fixed a bug in sqrt.
    
leJOS 1.0.0beta1:
-----------------

  - Multi-program downloading. All programs are linked and
    downloaded in one shot and override previously downloaded 
    programs. Use: lejos Class0,Class1,...
  - Auto power off, but only while in program-download mode.
  - Increased default stack size.
  - Brian Bagnall's latest changes to Math (log, exp, sqrt, and more!)
  - Changed memory allocation and deallocation routines, in preparation
    for upcoming implementation of garbage collection.
  - Max array length is now 511 (was 255).
  - Linker warns about truncated long and double constants.
  - Battery power shown as percentage in program-download mode.
  - This should now work: To kill a running program, hold Run while 
    you press On/Off.
  - Miscellaneous bug fixes (e.g. a js.tinyvm.Sequence bug reported
    by K. E. Elby).

leJOS 1.0.0alpha5:
------------------

  - Significant changes to Sensor API. Sensor.setTypeAndMode()
    should be called before using a Sensor. Sensor.getPercentageValue()
    is no longer there. SensorListener only has one method.
  - Performance of low-level method readSensorValue has
    improved by at least a factor of 6.
  - There is only one global thread that dispatches events to
    SensorListener's, which will also improve performance
    considerably, and may even prevent certain race conditions.
    (Having only one thread for sensor events was once mentioned 
    by Reinhard Schiedermeier).
  - java.lang.Math.atan(double), contributed by Brian Bagnall.
  - Linker checks whether entry class has a main method.
  - Forced persistence across runs was taken out, i.e. all memory 
    is reinitialized every time you rerun a program.
  - Prgm-On/Off does nothing. Run-On/Off kills a running program.
  - Emulation tools have been renamed.
  
leJOS 1.0.0alpha4:
------------------
  
  - Added Brian Bagnall's java.lang.Math class.
  - Fixed bug in the way the linker was writing doubles.
  - Optimized native method calling. About 30% performance
    improvement.
  - Found bugs in handling of stack by some native methods.
    This might have been causing programs to misbehave.

leJOS 1.0.0alpha3:
------------------
  
  - ButtonListener support.
  - Fixed a linker bug: it was dumping a stack trace if
    one of the zip/jar entries in the classpath wasn't found.
    This bug was reported by E. Harshbarger.
  - lejosc and lejosp will work with Java 2 compilers only.
    For JDK 1.1, use lejosc1 and lejosp1. The problem was
    that java.util.Random couldn't be used with Java 2.
    Reported by J. Knudsen.
  - Changed Random(int) to Random(long).
  - Fixed memory leak. Thread stacks were not getting deallocated
    properly on program death.
  - Fixed Makefiles and other things to make leJOS installable
    under Linux.
  
leJOS 1.0.0alpha2:
------------------

  - Distributing CYGWIN1.DLL in the bin directory. 
  
leJOS 1.0.0alpha1:
------------------

  - leJOS is born out of TinyVM. Versions starting
    with 0 are TinyVM versions, whereas versions starting
    with 1 are leJOS versions.
  - Marking references in stack.
  - String constants.
  - Caught up with TinyVM. This is ongoing. Refer to
    TinyVM release notes for 0.1.4 and up.
  - Scripts converted into executables. 
  - Native Thread.sleep() and System.currentTimeMillis().
  - Various other enhancements.

TinyVM 0.1.3:
--------------

  - Found that the hello example did not compile in
    the last version. Fixed it.

  - Decided to make the firmware show battery power 
    whenever it enters program-download mode.

  - Fixed virtual method linker bug. (The linker was
    unable to find certain virtual methods in classfiles
    compiled with JDK1.2.x).

  - Apparently fixed On/Off bug. (The LCD is not cleared 
    by shutdown_buttons in some RCXs).

  - Got rid of TINYVM_HOME.

  - TINYVMPATH is no longer necessary. CLASSPATH is
    used.

  - More appropriate message for linker failure when
    instanceof or checkcast of array classes is 
    encountered.

  - Multi-dimensional array allocation was broken.
    Fixed it.

  - Fixed checkcast bug. (It was not allowing casts of
    null).

  - Footprint report:
    Test13 creates 4238 objects.
    Firmware download count: ~1020

TinyVM 0.1.2:
--------------

  - Fixed serial comm bug. (If you tried to download
    a program to the RCX while another program was
    running, the transferred data could clobber 
    program memory. TinyVM is now shutting down
    serial communications right after a program is
    downloaded).

  - Added a couple dummy classes to satisfy the
    jikes compiler. Users simply have to set JAVAC
    to "jikes". (Jikes is a really fast Java compiler
    by IBM).

  - Changed implementation of Sensor.readSensorValue.
    Reading values from sensors should be more
    efficient now. (I might have to adjust the rotator
    example a bit).

  - Publicized the SensorListener interface and
    Sensor.addListener. It probably still needs to
    be optimized for performance.

  - Added examples to some classes in the API
    documentation.

  - Removed "queued" parameter from most methods in
    Sound. It really didn't make sense to have it 
    in some APIs. Hopefully that won't be much of a 
    problem for anyone.

  - Removed previously deprecated APIs from ROM.
    Again, sorry if this affects you.

  - Fixed MONITORENTER bug. (It was not throwing
    NPE on null monitors - it was crashing instead).

  - TinyVM's linker is now also a loader: The -d
    option will download the program to the RCX.

  - TinyVM's firmware is now listening for the 
    standard "Delete Firmware" opcode (0x65/0x6d).
    Consequently, Prgm-Run On/Off is no longer
    useful, so it has been removed.

  - tvmfirmdl doesn't need an argument now.

  - Added the Serial API and a corresponding example.

  - Footprint report:
    Test13 creates 4262 objects.
    The firmware download count is about 1000.    

TinyVM 0.1.1:
--------------

  - Fixed PUTSTATIC bug. (Setting a static field
    in uninitialized class could produce subsequent
    erroneous behavior).

  - Fixed exceptions bug. (Very critical bug:
    exceptions were not pushed on the stack before
    they were caught).

  - Changed RCX API so that its style conforms
    a bit more with other Java APIs. Namely, 
    depracted routines in ROM, and split them up
    into LCD and Sound, which have more convenient
    APIs. Removed some ROM routines, which hopefully
    haven't been used too much yet. Class Native
    now contains native APIs. ROM contains certain
    unclassified APIs.

  - Added buttons API.

  - Improved the usability of the firmware a bit.
    Basically, you can now press the On/Off button
    to turn off the RCX and kill running programs.

  - To continue on exception "traces" you have to
    press On/Off instead of View.

  - TinyVM has been ported to JDK1.2. This required
    a couple of fixes under jtools.

  - Footprint: Test13 can create 4338 empty objects
    (17352 bytes of allocation space).









